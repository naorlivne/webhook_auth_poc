version: '3'

services:
   # the redis backend DB for the alice container
   redis_alice:
     container_name: redis_alice
     hostname: redis_alice
     image: redis:4-alpine3.9
     restart: unless-stopped

  # the redis backend DB for the eve container
   redis_eve:
     container_name: redis_eve
     hostname: redis_eve
     image: redis:4-alpine3.9
     restart: unless-stopped

# "Alice" container which acts as a legitimate requester API
   alice:
     container_name: alice
     depends_on:
       - redis_alice
     hostname: alice
     image: naorlivne/webhook_auth_poc
     ports:
       - "5000:80"
     restart: unless-stopped
     environment:
       PYTHONUNBUFFERED: 1
       REDIS_HOST: redis_alice
       REDIS_PORT: 6379
       RECEIVER_WEBHOOK_URL: http://bob/receiver
       REQUESTER_WEBHOOK_URL: http://alice/webhook

# "Eve" container which acts as an attacker and tries to impersonate "alice" webhook url (which will fail)
   eve:
     container_name: eve
     hostname: eve
     depends_on:
       - redis_eve
     image: naorlivne/webhook_auth_poc
     ports:
       - "5001:80"
     restart: unless-stopped
     environment:
       PYTHONUNBUFFERED: 1
       REDIS_HOST: redis_eve
       REDIS_PORT: 6379
       RECEIVER_WEBHOOK_URL: http://bob/receiver
       REQUESTER_WEBHOOK_URL: http://alice/webhook

# a "Bob" container which acts as the receiver API
   bob:
     container_name: bob
     hostname: bob
     image: naorlivne/webhook_auth_poc
     restart: unless-stopped
     environment:
       PYTHONUNBUFFERED: 1
       RECEIVER_WEBHOOK_URL: http://bob/receiver
